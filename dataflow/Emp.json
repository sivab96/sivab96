{
	"name": "Emp",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Emp_CSV",
						"type": "DatasetReference"
					},
					"name": "Emp"
				},
				{
					"dataset": {
						"referenceName": "Emp_CSV",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Emp_CSV",
						"type": "DatasetReference"
					},
					"name": "sink1"
				},
				{
					"dataset": {
						"referenceName": "SQLTable",
						"type": "DatasetReference"
					},
					"name": "sink2"
				},
				{
					"dataset": {
						"referenceName": "SQLTable",
						"type": "DatasetReference"
					},
					"name": "sink3"
				},
				{
					"name": "sink4"
				}
			],
			"transformations": [
				{
					"name": "Tax"
				},
				{
					"name": "Filter1"
				},
				{
					"name": "Join1"
				},
				{
					"name": "DerivedColumn1"
				},
				{
					"name": "Filter2"
				},
				{
					"name": "Select1"
				},
				{
					"name": "SurrogateKey1"
				},
				{
					"name": "Aggregate1"
				}
			],
			"script": "source(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tmoveFiles: ['Source/2022/YYYY/employees.csv','Source'],\n\tenableCdc: true,\n\tmode: 'read',\n\tskipInitialLoad: true,\n\twildcardPaths:['Source/*.csv']) ~> Emp\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> source1\nEmp derive(Tax = SALARY*100000) ~> Tax\nTax filter(ERROR_FUNCTION('')) ~> Filter1\nTax, source1 join(EMPLOYEE_ID == ERROR_FUNCTION(''),\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> Join1\nTax derive() ~> DerivedColumn1\nDerivedColumn1 filter(ERROR_FUNCTION('')) ~> Filter2\nSurrogateKey1 select(mapColumn(\n\t\tEMPLOYEE_ID,\n\t\tFIRST_NAME,\n\t\tempidsk\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nAggregate1 keyGenerate(output(empidsk as long),\n\tstartAt: 1L) ~> SurrogateKey1\nFilter1 aggregate(groupBy(JOB_ID,\n\t\tEMPLOYEE_ID),\n\tcolumn1 = ERROR_FUNCTION(''),\n\t\tPHONE_NUMBER = count(EMPLOYEE_ID)) ~> Aggregate1\nSelect1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tsaveOrder: 1) ~> sink1\nJoin1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> sink2\nFilter2 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tEMPLOYEE_ID,\n\t\tFIRST_NAME,\n\t\tLAST_NAME,\n\t\tEMAIL,\n\t\tPHONE_NUMBER,\n\t\tHIRE_DATE,\n\t\tJOB_ID,\n\t\tSALARY,\n\t\tCOMMISSION_PCT,\n\t\tMANAGER_ID\n\t)) ~> sink3\nTax sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapOutputs: true,\n\tmapColumn(\n\t\tEMPLOYEE_ID,\n\t\tFIRST_NAME,\n\t\tLAST_NAME,\n\t\tEMAIL,\n\t\tPHONE_NUMBER,\n\t\tHIRE_DATE,\n\t\tJOB_ID,\n\t\tSALARY,\n\t\tCOMMISSION_PCT,\n\t\tMANAGER_ID,\n\t\tDEPARTMENT_ID,\n\t\tTax\n\t)) ~> sink4"
		}
	}
}