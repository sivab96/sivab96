{
	"name": "Emp",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Emp_CSV",
						"type": "DatasetReference"
					},
					"name": "Emp"
				}
			],
			"sinks": [
				{
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "Tax"
				},
				{
					"name": "Assert1"
				}
			],
			"script": "source(output(\n\t\tEMPLOYEE_ID as short,\n\t\tFIRST_NAME as string,\n\t\tLAST_NAME as string,\n\t\tEMAIL as string,\n\t\tPHONE_NUMBER as string,\n\t\tHIRE_DATE as string,\n\t\tJOB_ID as string,\n\t\tSALARY as short,\n\t\tCOMMISSION_PCT as string,\n\t\tMANAGER_ID as string,\n\t\tDEPARTMENT_ID as short\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tmoveFiles: ['Source/2022/YYYY/employees.csv','Source'],\n\tenableCdc: true,\n\tmode: 'read',\n\tskipInitialLoad: true,\n\twildcardPaths:['Source/*.csv']) ~> Emp\nEmp derive(Tax = SALARY*100000) ~> Tax\nTax, Emp assert(expectTrue(ERROR_FUNCTION(''), false, 'assert1', Emp@SALARY>1100)) ~> Assert1\nAssert1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tsaveOrder: 1) ~> sink1"
		}
	}
}